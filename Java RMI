//Java RMI Display Message APP

//Create a Java project.
//Create a package in the project and name it pkg_RMI.
//Create an interface and name it RMI_interface. Add following code:

package pkg_RMI;

import java.rmi.Remote;
import java.rmi.RemoteException;

public interface RMI_interface extends Remote{
	
	public void displayMessage() throws RemoteException;
	

}

//Create a class and name it RMI_Server. Add following code:

package pkg_RMI;

import java.rmi.server.UnicastRemoteObject;
import java.rmi.AlreadyBoundException;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;

public class RMI_Server extends UnicastRemoteObject implements RMI_interface{

	public RMI_Server() throws RemoteException {
		super();
	}

	public static void main(String[] args)throws RemoteException, AlreadyBoundException {
		try {
			Registry registry = LocateRegistry.createRegistry(1878);
			registry.bind("hello", new RMI_Server());
			System.out.println("The RMI_Server is running and ready...");
		} 
		catch (Exception e) {
			System.out.println("The RMI_Server is not running...");
		} 
	}

	@Override
	public void displayMessage()throws RemoteException{
		System.out.println("----------------------------------------------");
		System.out.println("Hello World!");
		System.out.println("----------------------------------------------");
		
	}

}

//Create a class and name it RMI_Client. Add following code:
package pkg_RMI;

import java.net.MalformedURLException;
import java.rmi.RemoteException;
import java.rmi.NotBoundException;
import java.rmi.Naming;


public class RMI_Client {

	public static void main(String[] args) throws MalformedURLException, RemoteException, NotBoundException{
		try {
			RMI_interface helloAPI = (RMI_interface) Naming.lookup("rmi://localhost:1878/hello");
			helloAPI.displayMessage();
		}
		catch(Exception e)
		{
			System.out.println("The RMI APP is not running...");
			e.printStackTrace();
		}
	}
	
	

}


//Run the server first.
//Now run the client.
